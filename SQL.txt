-- DROP TABLES AND TYPES
DROP TABLE IF EXISTS expense_reports, expense_tracker, reports, vehicle_usage, fuel_consumption, services, vehicles,
drivers, customers, sys_admins, fleet_management_sys, users CASCADE;

DROP TYPE IF EXISTS vehicle_status, ownership_type, vehicle_type, service_type, report_type, expense_type;

-- ENUM TYPES
CREATE TYPE vehicle_status AS ENUM ('AVAILABLE', 'ASSIGNED', 'IN_SERVICE', 'OUT_OF_ORDER');
CREATE TYPE ownership_type AS ENUM ('OWNED', 'LEASED');
CREATE TYPE vehicle_type AS ENUM ('SEDAN', 'SUV', 'TRUCK', 'VAN');
CREATE TYPE service_type AS ENUM ('REGULAR_MAINTENANCE', 'PART_REPLACEMENT', 'TIRE_CHANGE', 'REPAIR');
CREATE TYPE report_type AS ENUM ('VEHICLE_USAGE', 'FUEL_CONSUMPTION', 'MAINTENANCE_COST', 'INSURANCE_COST', 'REPAIR_COST', 'TOTAL_COST', 'PREDICTION');
CREATE TYPE expense_type AS ENUM ('FUEL', 'MAINTENANCE', 'INSURANCE', 'REPAIR', 'TOTAL');

-- TABLES

CREATE TABLE sys_admins (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE customers (
    company_id INTEGER NOT NULL PRIMARY KEY,
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE drivers (
    user_id SERIAL PRIMARY KEY,
    company_id INTEGER REFERENCES customers(company_id),
    username VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    license_number VARCHAR(50),
    license_expiry_date DATE NOT NULL,
    is_active BOOLEAN NOT NULL
);

CREATE TABLE vehicles (
    vehicle_id SERIAL PRIMARY KEY,
    company_id INTEGER REFERENCES customers(company_id),
    plate_number VARCHAR(20) NOT NULL UNIQUE,
    brand VARCHAR(50),
    model VARCHAR(50),
    year INTEGER,
    type vehicle_type,
    status vehicle_status,
    ownership_type ownership_type,
    current_odometer DOUBLE PRECISION,
    previous_month_odometer DOUBLE PRECISION,
    driver_id INTEGER REFERENCES drivers(user_id)
);

CREATE TABLE services (
    service_id SERIAL PRIMARY KEY,
    vehicle_id INTEGER REFERENCES vehicles(vehicle_id),
    service_date DATE,
    service_type service_type,
    description TEXT,
    cost DOUBLE PRECISION,
    is_covered_by_insurance BOOLEAN
);

CREATE TABLE fuel_consumption (
    fuel_id SERIAL PRIMARY KEY,
    vehicle_id INTEGER REFERENCES vehicles(vehicle_id),
    driver_id INTEGER REFERENCES drivers(user_id),
    date DATE,
    liters DOUBLE PRECISION,
    cost DOUBLE PRECISION,
    odometer_reading DOUBLE PRECISION
);

CREATE TABLE vehicle_usage (
    usage_id SERIAL PRIMARY KEY,
    vehicle_id INTEGER REFERENCES vehicles(vehicle_id),
    driver_id INTEGER REFERENCES drivers(user_id),
    start_date DATE,
    end_date DATE,
    start_odometer DOUBLE PRECISION,
    end_odometer DOUBLE PRECISION,
    purpose TEXT,
    is_verified BOOLEAN DEFAULT FALSE
);

CREATE TABLE reports (
    report_id SERIAL PRIMARY KEY,
    generated_date DATE,
    type report_type,
    title VARCHAR(100),
    data TEXT
);

CREATE TABLE expense_tracker (
    tracker_id SERIAL PRIMARY KEY,
    company_id INTEGER REFERENCES customers(company_id),
    expense_type expense_type
);

CREATE TABLE expense_reports (
    tracker_id INTEGER REFERENCES expense_tracker(tracker_id),
    report_id INTEGER REFERENCES reports(report_id),
    PRIMARY KEY (tracker_id, report_id)
);

-- SAMPLE DATA

-- Admin
INSERT INTO sys_admins (username, password, email)
VALUES ('admin1', 'hashedpassword1', 'admin1@example.com');

-- Customer (Company)
INSERT INTO customers (company_id, username, password, email)
VALUES (1, 'company1', 'hashedpassword2', 'contact@company1.com');

-- Drivers
INSERT INTO drivers (username, password, email, license_number, license_expiry_date, is_active, company_id)
VALUES
('driver_anna', 'hashedpassword3', 'anna@fleetcorp.com', 'DL123456', '2026-12-31', true,1),
('driver_bob', 'hashedpassword4', 'bob@fleetcorp.com', 'DL654321', '2025-08-20', true,1);

-- Vehicles
INSERT INTO vehicles (company_id, plate_number, brand, model, year, type, status, ownership_type, current_odometer, previous_month_odometer, driver_id)
VALUES
(1, 'ABC123', 'Toyota', 'Corolla', 2020, 'SEDAN', 'ASSIGNED', 'OWNED', 50200, 49000, 1),
(1, 'XYZ789', 'Ford', 'Transit', 2019, 'VAN', 'IN_SERVICE', 'LEASED', 78200, 77000, 2);

-- Services
INSERT INTO services (vehicle_id, service_date, service_type, description, cost, is_covered_by_insurance)
VALUES
(1, '2025-04-10', 'REGULAR_MAINTENANCE', 'Oil change and filter replacement', 120.00, false),
(2, '2025-04-15', 'TIRE_CHANGE', 'Replaced all four tires', 400.00, true);

-- Fuel Consumption
INSERT INTO fuel_consumption (vehicle_id, driver_id, date, liters, cost, odometer_reading)
VALUES
(1, 1, '2025-04-05', 40.5, 85.00, 49500),
(2, 2, '2025-04-06', 55.0, 120.00, 77500);

-- Vehicle Usage (is_verified = false hepsinde)
INSERT INTO vehicle_usage (vehicle_id, driver_id, start_date, end_date, start_odometer, end_odometer, purpose, is_verified)
VALUES
(1, 1, '2025-04-01', '2025-04-05', 49000, 49500, 'Client visits', FALSE),
(2, 2, '2025-04-03', '2025-04-07', 77000, 77500, 'Delivery', FALSE),
(1, 1, '2025-05-01', '2025-05-05', 49000, 49500, 'Client visits 2', FALSE),
(2, 1, '2025-05-10', '2025-05-31', 77000, 77500, 'Delivery 2', FALSE);

-- Reports
INSERT INTO reports (generated_date, type, title, data)
VALUES
('2025-04-30', 'FUEL_CONSUMPTION', 'Monthly Fuel Report - April', 'Summary of fuel usage for April'),
('2025-04-30', 'MAINTENANCE_COST', 'Maintenance Summary - April', 'Details of service and maintenance costs');

-- Expense Tracker
INSERT INTO expense_tracker (company_id, expense_type)
VALUES
(1, 'FUEL'),
(1, 'MAINTENANCE');

-- Expense Reports
INSERT INTO expense_reports (tracker_id, report_id)
VALUES
(1, 1),
(2, 2);

-- For services table
ALTER TABLE services
DROP CONSTRAINT IF EXISTS services_vehicle_id_fkey;

ALTER TABLE services
ADD CONSTRAINT services_vehicle_id_fkey
    FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id) ON DELETE CASCADE;

-- For fuel_consumption table
ALTER TABLE fuel_consumption
DROP CONSTRAINT IF EXISTS fuel_consumption_vehicle_id_fkey;

ALTER TABLE fuel_consumption
ADD CONSTRAINT fuel_consumption_vehicle_id_fkey
    FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id) ON DELETE CASCADE;

-- For vehicle_usage table
ALTER TABLE vehicle_usage
DROP CONSTRAINT IF EXISTS vehicle_usage_vehicle_id_fkey;

ALTER TABLE vehicle_usage
ADD CONSTRAINT vehicle_usage_vehicle_id_fkey
    FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id) ON DELETE CASCADE;
